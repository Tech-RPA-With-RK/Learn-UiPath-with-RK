<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="848.8,2100.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="540.8,2036" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="IntValue1" />
      <Variable x:TypeArguments="x:Int32" Name="IntValue2" />
      <Variable x:TypeArguments="x:Int32" Name="NegativeNum" />
      <Variable x:TypeArguments="x:String" Name="StrValue" />
      <Variable x:TypeArguments="x:Double" Name="parsedValue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign - Assign all input values for this xaml" sap:VirtualizedContainerService.HintSize="478.4,242.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[IntValue1]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">15</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[IntValue2]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">5</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[NegativeNum]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">-100</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[StrValue]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">123</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <WriteLine DisplayName="Write Line - Addition" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Addition - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+ &quot; Value 2 : &quot; +IntValue2.ToString + Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (IntValue1+ IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Subtraction" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Subtraction - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+ &quot; Value 2 : &quot; +IntValue2.ToString + Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (IntValue1 - IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Multiplication" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Multiplication - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+ &quot; Value 2 : &quot; +IntValue2.ToString + Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (IntValue1 * IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Division" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Division - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+ &quot; Value 2 : &quot; +IntValue2.ToString + Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (IntValue1 / IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Modulous" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Modulous - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+ &quot; Value 2 : &quot; +IntValue2.ToString + Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (IntValue1 Mod IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Comparison Equal" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;Comparision - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+&quot; Value 2 : &quot;+IntValue2.ToString+&#xD;&#xA;&quot;Output : &quot;+ ( IntValue1 = IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Comparison Lesser than" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;Comparision Lesserthan - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+&quot; Value 2 : &quot;+IntValue2.ToString+&#xD;&#xA;&quot;Output : &quot;+ ( IntValue1 &lt; IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Comparison Lesser than Equal to" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Comparision Lesser than Equal to- &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+&quot; Value 2 : &quot;+IntValue2.ToString+&#xD;&#xA;&quot;Output : &quot;+ ( IntValue1 &lt;= IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Comparison Greater than" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;Comparision Greater than - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+&quot; Value 2 : &quot;+IntValue2.ToString+&#xD;&#xA;&quot;Output : &quot;+ ( IntValue1 &gt; IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Comparison Greater than equal to" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;Comparision Greater than Equal to - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+IntValue1.ToString+&quot; Value 2 : &quot;+IntValue2.ToString+&#xD;&#xA;&quot;Output : &quot;+ ( IntValue1 &gt;= IntValue2).ToString]" />
    <WriteLine DisplayName="Write Line - Absolute" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;Absolute - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+NegativeNum.ToString+&#xD;&#xA;&quot;Output : &quot;+ Math.Abs(NegativeNum).ToString]" />
    <WriteLine DisplayName="Write Line - Square Root" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;SquareRoot - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+&quot; Value 1 : &quot;+NegativeNum.ToString+&#xD;&#xA;&quot;Output : &quot;+ Math.sqrt(NegativeNum).ToString]" />
    <WriteLine DisplayName="Write Line - Ceiling, Floor and Round" sap:VirtualizedContainerService.HintSize="478.4,122.4" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[&quot;Ceiling - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : 2.3&quot;+ Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ Math.Ceiling(2.3).ToString + Environment.NewLine+&#xD;&#xA;&quot;Floor - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : 2.7&quot;+ Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ Math.Floor(2.7).ToString + Environment.NewLine+&#xD;&#xA;&quot;Round - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : 2.5&quot;+ Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ Math.Round(2.5).ToString + Environment.NewLine]" />
    <WriteLine DisplayName="Write Line - Parse" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[&quot;Parse - &quot; + Environment.NewLine+&#xD;&#xA;&quot;Input : &quot;+StrValue+ Environment.NewLine+&#xD;&#xA;&quot;Output : &quot;+ (Integer.Parse(StrValue)).ToString]" />
  </Sequence>
</Activity>